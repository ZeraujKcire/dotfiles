let g:quicktex_python = {
      \' ' : "\<ESC>:call search('<++>')\<CR>\"_c/+>/e\<CR>",
			\'ap' : ".append(<+++>) <++>",
      \'cl' : "class <+++>(<++>):\n<++>",
      \'cla' : "class <+++>(<++>):\n<++>",
			\'d' : "def <+++>(<++>):\n<++>",
			\'de' : "def <+++>(<++>):\n<++>",
			\'el' : "else:\n",
      \'f' : "f\"<+++>\" <++>",
      \'for' : "for <+++> in <++>:\n<++>",
			\'fun' : "from functions import *",
      \'he' : "help(<+++>) <++>",
			\'i' : "if (<+++>):\n<++>",
      \'im' : "import ",
      \'im1' : "import <+++> as <++>",
			\'in' : "int(<+++>) <++>",
      \'ini' : "def __init__(self,<+++>):\n<++>",
			\'no' : "not in ",
      \'op' : "open(\"<+++>\") <++>",
			\'ra' : "range(<+++>) <++>",
      \'ran' : "range(<+++>, <++>) <++>",
      \'rand' : "random.choice(<+++>) <++>",
      \'ret' : "return ",
      \'sec' : "# === <+++> === (((\n<++>\n# )))",
			\'pa' : "pass ",
			\'pr' : "print(<+++>) <++>",
			\'pri' : "print('<+++>', end = \" \") <++>",
			\'T' : "True",
			\'t' : "True",
      \}
