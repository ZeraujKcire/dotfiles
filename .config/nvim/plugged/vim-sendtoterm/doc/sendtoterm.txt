*sendtoterm.txt*  Plugin to send text to builtin vim terminal.

Author:  Maxim Kim <habamax@gmail.com>
URL:     https://github.com/habamax/vim-sendtoterm
License: MIT

================================================================================

Open builtin terminal next to you source file, run interpreter (i.e. R, ruby,
python, elixir) and send text to it.

NOTE: for a python interpreter it doens't work as I would like to -- it waits
for another <CR>.

SETTINGS                                                 *sendtoterm-settings*

	let g:sendtoterm_expandtab = 0

Convert tabs to spaces if true and 'expandtab' is false. Default is 1.

MAPPINGS                                                 *sendtoterm-mappings*

<leader>t                                               *sendtoterm-<leader>t*
'<leader>t' in normal mode is an operator. It starts |operator-pending-mode| where
you can specify a motion to send text to a visible terminal.

'<leader>t' in visual mode send selection to a visible terminal.


PLUGS                                                       *sendtoterm-plugs*
Default mapping is |<leader>t|

One can remap it to something else using following <Plug>s:

	xmap <leader>r  <Plug>(SendToTerm)
	nmap <leader>r  <Plug>(SendToTerm)
	omap <leader>r  <Plug>(SendToTerm)
	nmap <leader>rr <Plug>(SendToTermLine)


What about `Ctrl-Enter` to send current line (probably would not work for all
terminals)?

	nmap <C-CR> <Plug>(SendToTermLine)

What if I want my cursor to go to the next non-empty line after current line
was sent to terminal?

	nmap <C-CR> <Plug>(SendToTermLine)j:call search('^\s*\S.*', 'W')<CR>

vim:tw=78:ts=4:ft=help:
