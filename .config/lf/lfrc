# vim:foldmarker={{,}}

#  ██       ████████
# ░██      ░██░░░░░ 
# ░██      ░██      
# ░██      ░███████ 
# ░██      ░██░░░░  
# ░██      ░██      
# ░████████░██      
# ░░░░░░░░ ░░       

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ Basics / General                                                          │
# └───────────────────────────────────────────────────────────────────────────┘


# {{set preview
# interpreter for shell commands
set shell sh
# set preview
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'
# }}

# {{ shellopts
# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'
# }}

# {{ ifs
# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"
# }}

# {{ leave some space at the top and the bottom of the screen
set scrolloff 18
# }}

# {{ use enter for shell commands
map <enter> shell
#}}

# {{ execute current file (must be executable)
map x $$f
map X !$f
# }}

#{{ mimeopen
map o &mimeopen $f
map O $mimeopen --ask $f
#}}

cmd open ${{
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# {{ define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "FILE EXISTS" || mv $f $1
# }}

# === file size === {{
cmd file_size %du -sh $f
# # }}

# {{ trash
cmd trash %set -f;trash $fx
# }}

# cmd gototrash %set hidden!;set -f;cd ~/.local/share/Trash/files/

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd compress_tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd compress_zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

#{{ cmd updir $
cmd updir %cd ..
#}}

cmd mkdir ${{
    set -f
    printf "NEW DIRECTORY NAME: "
    read name
    mkdir $name
}}

cmd mkfile ${{
    printf "NEW FILE NAME: "
    read name
    touch $name
    $EDITOR $name
}}

# {{ cmd chmod
cmd chmod %chmod +x "$f"
# }}

#{{ cmd terminal_window $
cmd terminal_window &kitty 'lf' && cd $f
#}}

# cmd gotoconfig ${{
  # printf "CONFIG FOLDER: "
  # read name
  # directory = ".config/" + $name
  # cd ~
  # cd $directory
# }}

# === drag_files === {{
cmd dragon %dragon -a -x $fx
cmd dragon-stay %dragon -a $fx
cmd dragon-individual %dragon -x $fx
# # }}

# Markdown {{
cmd create_md %cp ~/Plantillas/MARKDOWN/markdown.md .
#}}

# Latex {{
cmd pdflatexfolder %cp -R ~/Plantillas/LATEX_1/ .
cmd xelatexfolder  %cp -R ~/Plantillas/LATEX_2/ .
cmd practica_pdf   %cp -R ~/Plantillas/PRACTICA_1 .
cmd practica_xel   %cp -R ~/Plantillas/PRACTICA_2 .
cmd practica_contr %cp -R ~/Plantillas/PRACTICA_3 .
cmd practica_xel_R %cp -R ~/Plantillas/PRACTICA_R .
cmd xelatex_R      %cp -R ~/Plantillas/LATEX_R .
cmd beamer_pdf     %cp -R ~/Plantillas/LATEX_BEAMER .
cmd beamer_xel     %cp -R ~/Plantillas/LATEX_BEAMER_2 .
cmd tarea_pdf      %cp -R ~/Plantillas/LATEX_TAREAS .
cmd tikz_xel       %cp -R ~/Plantillas/LATEX_TIKZ_XELATEX/ .
cmd tikz_tex_norm  %cp -R ~/Plantillas/LATEX_TIKZ_NORMAL/ .
cmd license        %cp -R ~/Plantillas/GIT/LICENSE.txt .
cmd ams_math       %cp -R ~/Plantillas/AMS_ART/ .
cmd simulacion     %cp -R ~/Plantillas/TEMPLATE_SIMULACION/ .
cmd chess          %cp -R ~/Plantillas/CHESS .
# cmd clear_tex      %find . -type f ! -name '*.tex' ! -name '*.sty' ! -name '*.pdf' ! -name '*.bib' ! -name '*.txt' ! -name '*.doc*' ! -name '*.png' ! -name '*.PNG' ! -name '*.ods' ! -name '*.r' ! -name '*.R' ! -name '*.jpeg' -delete
cmd clear_tex %find . -regextype posix-egrep -regex ".*\.(aux|log|nav|out|snm|toc|bbl|blg)$" -type f -delete
#}} 

#{{ CLEAN BINDINGS.
map +
map -
map c
map d
map dd
map du
map e
map gt
map h
map j
map k
map l
map m
map md
map mf
map mlb
map mlc
map mlp
map mmd
map mpp
map mpr
map mpx
map mbx
map mlx
map mta
map mlr
map mti
map mlt
map mli
map mas
map mc
map r
map ñ
map J
map K
map L
map mti
map R
map <c-r>
map <c-d>
map <a-r>
map dr
map ds
map di
map <c-c>
map msi
# map x
#}}

#{{ KEYBINDINGS.
map + :set preview
map - :set nopreview
map . set hidden!
map c cut
map dd trash
map du file_size
map e extract
# map gt gototrash
map j updir
# map H umount_usb
map h mount_usb
map k down
map l up
map md mkdir
map mf mkfile
map mlb beamer_pdf
map mbx beamer_xel
map mlc practica_contr
map mlp pdflatexfolder
map mpp practica_pdf
map mpr practica_xel_R
map mpx practica_xel
map mlx xelatexfolder
map mmd create_md
map mta tarea_pdf
map mti tikz_xel
map mlt tikz_tex_norm
map mlr xelatex_R
map mli license
map mas ams_math
map msi simulacion
map r $lf -remote "send $id push :rename<space>'$(basename $f | sed 's/.*\./\./g')'<home><right><right><right><right><right><right><right><right>"
map <c-r> $lf -remote "send $id push :rename<space>'$(basename $f | sed 's/\..*/\./g')'<left>"
map R $lf -remote "send $id push :rename<space>''<left>"
map <a-r> $lf -remote "send $id push :rename<space>'$(basename $f | sed 's/ /_/g')'"
map ñ open
map J cd ~
map K bottom
map L top
map W terminal_window
map x chmod
map <a-t> clear_tex
map <c-d> reload
map dr dragon
map ds dragon-stay
map di dragon-individual
map <c-c> clear
map mc chess
# map x $lf -remote "send $id push :search<Enter>tex<Enter>"
# map x push :search tex
#}}
